version: '3.7'

services:
  proxy:
    image: traefik:v1.7
    ports:
      - 80:80
      - 443:443
    networks:
      - proxy-public
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - proxy-public-certificates:/certificates
    command: >
      --docker
      --docker.watch
      --docker.exposedbydefault=false
      --constraints=tag==proxy-public
      --entrypoints='Name:http Address::80'
      --entrypoints='Name:https Address::443 TLS'
      --acme
      --acme.email=${EMAIL?Variable EMAIL not set}
      --acme.storage="certificates/acme.json"
      --acme.entryPoint=https
      --acme.httpChallenge.entryPoint=http
      --acme.onhostrule=true
      --acme.acmelogging=true
      --logLevel=INFO
      --accessLog
      --api
    labels:
      - traefik.frontend.rule=Host:proxy.${DOMAIN?Variable DOMAIN not set}
      - traefik.enable=true
      - traefik.port=8080
      - traefik.tags=proxy-public
      - traefik.docker.network=proxy-public
      # Traefik service that listens to HTTP
      - traefik.redirectorservice.frontend.entryPoints=http
      - traefik.redirectorservice.frontend.redirect.entryPoint=https
      # Traefik service that listens to HTTPS
      - traefik.webservice.frontend.entryPoints=https
      - traefik.frontend.auth.basic.users=${USERNAME?Variable USERNAME not set}:${HASHED_PASSWORD?Variable HASHED_PASSWORD not set}

  postgres:
    image: postgres:11.3-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB?Variable POSTGRES_DB not set}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD?Variable POSTGRES_PASSWORD not set}
      POSTGRES_USER: ${POSTGRES_USER?Variable POSTGRES_USER not set}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  faithful_word:
    build: .
    image: faithful_word
    depends_on:
      - proxy
      - postgres
    networks:
      - proxy-public
    labels:
      - traefik.frontend.rule=Host:${DOMAIN?Variable DOMAIN not set}
      - traefik.enable=true
      - traefik.port=4000
      - traefik.tags=proxy-public
      - traefik.docker.network=proxy-public
      # Traefik service that listens to HTTP
      - traefik.redirectorservice.frontend.entryPoints=http
      - traefik.redirectorservice.frontend.redirect.entryPoint=https
      # Traefik service that listens to HTTPS
      - traefik.webservice.frontend.entryPoints=https

networks:
  proxy-public:
    external: true

volumes:
  proxy-public-certificates:
    external: true
  postgres-data:
    external: true
